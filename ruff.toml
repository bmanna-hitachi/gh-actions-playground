# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "docs",
]

# Default is the Same as Black.
# Default line-length = 88
line-length = 99
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[lint]
preview = true
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# to add/remove/check the rules, visit: https://docs.astral.sh/ruff/rules
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "ERA001", # commented out code; there should not be any such code in PR
    "ANN001", # Missing type annotation for function argument {name}
    "ANN201", # Missing return type annotation for public function {name}
    "ANN202", # Missing return type annotation for private function {name}
    "ANN204", # Missing return type annotation for special method {name}
    "ANN205", # Missing return type annotation for staticmethod {name}
    "ANN206", # Missing return type annotation for classmethod {name}
    "ASYNC",  # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "S",      # Security: https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "FBT",    # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
    "B",      # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "A",      # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
    "COM",    # https://docs.astral.sh/ruff/rules/#flake8-commas-com
    "C4",     # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "DTZ",    # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
    "DJ",     # Django: https://docs.astral.sh/ruff/rules/#flake8-django-dj
    "EM",     # https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
    "FIX",    # https://docs.astral.sh/ruff/rules/#flake8-fixme-fix
    "FA",     # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
    "ISC",    # https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
    "INP",    # https://docs.astral.sh/ruff/rules/#flake8-no-pep420-inp
    "PIE",    # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "T20",    # print, pprint should not make it to server : https://docs.astral.sh/ruff/rules/#flake8-pie-pie
    "Q",      # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
    "RSE",    # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
    "RET",    # https://docs.astral.sh/ruff/rules/#flake8-return-ret
    "SLF",    # https://docs.astral.sh/ruff/rules/#flake8-self-slf
    "SIM",    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "SLOT",   # https://docs.astral.sh/ruff/rules/#flake8-slots-slot
    "ARG",    # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
    "PTH",    # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
    "FLY",    # https://docs.astral.sh/ruff/rules/#flynt-fly
    "I",      # https://docs.astral.sh/ruff/rules/#isort-i
    "TD",     # https://docs.astral.sh/ruff/rules/#flake8-todos-td
    "TC",     # https://docs.astral.sh/ruff/rules/#flake8-type-checking-tc
    "NPY",    # https://docs.astral.sh/ruff/rules/#numpy-specific-rules-npy
    "PD",     # https://docs.astral.sh/ruff/rules/#pandas-vet-pd
    "N",      # https://docs.astral.sh/ruff/rules/#pep8-naming-n
    "PERF",   # https://docs.astral.sh/ruff/rules/#perflint-perf
    "E",      # https://docs.astral.sh/ruff/rules/#error-e
    "W",      # https://docs.astral.sh/ruff/rules/#warning-w
    "DOC",    # Docstring: https://docs.astral.sh/ruff/rules/#pydoclint-doc
    "D",      # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "F",      # https://docs.astral.sh/ruff/rules/#pyflakes-f
    "PL",     # https://docs.astral.sh/ruff/rules/#pylint-pl
    "PLE",    # https://docs.astral.sh/ruff/rules/#error-ple
    "PLR",    # https://docs.astral.sh/ruff/rules/#refactor-plr
    "PLW",    # https://docs.astral.sh/ruff/rules/#warning-plw
    "UP",     # https://docs.astral.sh/ruff/rules/#pyupgrade-up
    "FURB",   # https://docs.astral.sh/ruff/rules/#refurb-furb
    "RUF",    # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "TRY",    # https://docs.astral.sh/ruff/rules/#tryceratops-try
]
ignore = [
    "TID252", #	Prefer absolute imports over relative imports from parent modules
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link for this TODO
    "D100",   # Missing docstring in public module
    "D104",   # Missing doctring in public module
    "D203",   # No blacnk line before class
    "D212",   # Multi Line Summary
    "D213",   # Multi Line Summary
    "COM812", # Ignore for formatting
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
